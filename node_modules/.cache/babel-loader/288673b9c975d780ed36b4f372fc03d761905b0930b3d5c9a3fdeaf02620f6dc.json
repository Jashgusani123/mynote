{"ast":null,"code":"var _jsxFileName = \"E:\\\\jash\\\\ReactJSYT\\\\MiniProjects\\\\Mynotebook\\\\mynote\\\\src\\\\Constaxt\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport noteContext from './noteContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const noteInitsialized = [];\n  const [notes, setnotes] = useState(noteInitsialized);\n\n  //GetAll Notes....\n  const getallNotes = async () => {\n    //API Call\n    const response = await fetch(`${host}/api/notes/fatchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    const json = await response.json();\n    setnotes(json);\n  };\n\n  //Add a new Note....\n  const addNotes = async (title, description, tag) => {\n    //API Call\n    const response = await fetch(`${host}/api/notes/addnotes`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setnotes(notes.concat(note));\n  };\n\n  //Delete a Note...\n  const deleteNote = async id => {\n    //API Call\n    const response = await fetch(`${host}/api/notes/notedelete/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      }\n    });\n    await response.json();\n    //This is Client side\n    const newNote = notes.filter(note => {\n      return note._id !== id;\n    });\n    setnotes(newNote);\n  };\n\n  //Edit a Note...\n  const editNote = async (id, title, description, tag) => {\n    //API Call\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem(\"token\")\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    await response.json();\n    //This is Client side\n    let newnote = JSON.parse(JSON.stringify(notes));\n    for (let index = 0; index < newnote.length; index++) {\n      const element = newnote[index];\n      if (element._id === id) {\n        newnote[index].title = title;\n        newnote[index].description = description;\n        newnote[index].tag = tag;\n        break;\n      }\n    }\n    showalert(\"Login SuccessFully Compeleted\", \"success\");\n    setnotes(newnote);\n  };\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      notes,\n      addNotes,\n      deleteNote,\n      editNote,\n      getallNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"j7GAkDtoFOouENhUIeBWnUY+ZfY=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","noteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","noteInitsialized","notes","setnotes","getallNotes","response","fetch","method","headers","localStorage","getItem","json","addNotes","title","description","tag","body","JSON","stringify","note","concat","deleteNote","id","newNote","filter","_id","editNote","newnote","parse","index","length","element","showalert","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/jash/ReactJSYT/MiniProjects/Mynotebook/mynote/src/Constaxt/notes/NoteState.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport noteContext from './noteContext'\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"http://localhost:5000\"\r\n   const noteInitsialized = []\r\n   const [notes, setnotes] = useState(noteInitsialized)\r\n\r\n //GetAll Notes....\r\n const getallNotes = async()=>{\r\n  //API Call\r\n  const response = await fetch(`${host}/api/notes/fatchallnotes`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"auth-token\":localStorage.getItem(\"token\"),\r\n    },\r\n  });\r\n  const json = await response.json()\r\n  setnotes(json)\r\n}\r\n\r\n\r\n   //Add a new Note....\r\n   const addNotes = async(title , description , tag)=>{\r\n    //API Call\r\n    const response = await fetch(`${host}/api/notes/addnotes`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({title , description , tag}),\r\n    });\r\n    const note = await response.json()\r\n    setnotes(notes.concat(note))\r\n   }\r\n\r\n\r\n\r\n\r\n   //Delete a Note...\r\n   const deleteNote = async(id)=>{\r\n    //API Call\r\n    const response = await fetch(`${host}/api/notes/notedelete/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":localStorage.getItem(\"token\"),\r\n      },\r\n     \r\n    });\r\n    await response.json();\r\n    //This is Client side\r\n    const newNote = notes.filter((note)=>{return note._id !== id}) \r\n    setnotes(newNote)\r\n   }\r\n\r\n   //Edit a Note...\r\n   const editNote = async(id,title , description , tag)=>{\r\n    //API Call\r\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":localStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({title , description , tag}),\r\n    });\r\n     await response.json()\r\n    //This is Client side\r\n    let newnote = JSON.parse(JSON.stringify(notes))\r\n    for(let index = 0 ; index<newnote.length ; index++){\r\n      const element = newnote[index]\r\n      if(element._id === id){\r\n        newnote[index].title = title;\r\n        newnote[index].description = description;\r\n        newnote[index].tag = tag;\r\n        break;\r\n      }\r\n    }\r\n    showalert(\"Login SuccessFully Compeleted\" , \"success\")\r\n    setnotes(newnote)\r\n   }\r\n    return (\r\n        <noteContext.Provider value={{ notes , addNotes , deleteNote , editNote , getallNotes}}>\r\n            {props.children}\r\n        </noteContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NoteState"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}