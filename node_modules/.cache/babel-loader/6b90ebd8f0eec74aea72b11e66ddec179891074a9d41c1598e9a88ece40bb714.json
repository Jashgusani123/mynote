{"ast":null,"code":"var _jsxFileName = \"E:\\\\jash\\\\ReactJSYT\\\\MiniProjects\\\\Mynotebook\\\\mynote\\\\src\\\\Constaxt\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport noteContext from './noteContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const [notes, setnote] = useState([]);\n\n  // Get All notes\n  const getallnotes = async () => {\n    const respons = await fetch(\"http://localhost:5000/api/notes/fatchallnotes\", {\n      method: \"GET\",\n      headers: {\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZhYTc2MjcyNTdiYzEzN2Y0YTRlNDVmIn0sImlhdCI6MTcyMjYwMzYyNH0.X9rBNIV6BmBtHSOPAHXi9BlKCoKD-AO0uHOLW2NUtjM\"\n      }\n    });\n    const json = await respons.json();\n    setnote(json);\n  };\n\n  //Add Notes \n  const addNotes = async (title, description, tag) => {\n    // const respons = await fetch(\"http://localhost:5000/api/notes/addnotes\", {\n    //     method: \"POST\",\n    //     headers: {\n    //         \"Content-Type\": \"application/json\",\n    //         \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZhYTc2MjcyNTdiYzEzN2Y0YTRlNDVmIn0sImlhdCI6MTcyMjYwMzYyNH0.X9rBNIV6BmBtHSOPAHXi9BlKCoKD-AO0uHOLW2NUtjM\"\n    //     },\n    //     body:JSON.stringify({title , description , tag})\n    //     // body: {\n    //     //     \"title\": title,\n    //     //     \"description\": description,\n    //     //     \"tag\": tag\n    //     // }\n\n    // })\n    // const json = await respons.json();\n\n    const noteone = {\n      \"_id\": \"66add4f245145saa76caffbddf\",\n      \"user\": \"66aa7627257bc137f4a4e45f\",\n      \"title\": title,\n      \"description\": de,\n      \"tag\": \"Default\",\n      \"date\": \"2024-08-03T06:57:54.531Z\",\n      \"__v\": 0\n    };\n    setnote(notes.concat(noteone));\n  };\n\n  // Delete Notes\n  const deletenote = async id => {\n    const respons = await fetch(`http://localhost:5000/api/notes/notedelete/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZhYTc2MjcyNTdiYzEzN2Y0YTRlNDVmIn0sImlhdCI6MTcyMjYwMzYyNH0.X9rBNIV6BmBtHSOPAHXi9BlKCoKD-AO0uHOLW2NUtjM\"\n      }\n    });\n    const json = await respons.json();\n    // setnote(json)\n    const newnote = notes.filter(note => {\n      return note._id !== id;\n    });\n    setnote(newnote);\n  };\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      notes,\n      addNotes,\n      deletenote,\n      getallnotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"0fBXuBU3V93W0J4Qzhl1pffhzpY=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","noteContext","jsxDEV","_jsxDEV","NoteState","props","_s","notes","setnote","getallnotes","respons","fetch","method","headers","json","addNotes","title","description","tag","noteone","de","concat","deletenote","id","newnote","filter","note","_id","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/jash/ReactJSYT/MiniProjects/Mynotebook/mynote/src/Constaxt/notes/NoteState.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport noteContext from './noteContext'\r\n\r\nconst NoteState = (props) => {\r\n    const [notes, setnote] = useState([])\r\n\r\n    // Get All notes\r\n    const getallnotes = async () => {\r\n        const respons = await fetch(\"http://localhost:5000/api/notes/fatchallnotes\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZhYTc2MjcyNTdiYzEzN2Y0YTRlNDVmIn0sImlhdCI6MTcyMjYwMzYyNH0.X9rBNIV6BmBtHSOPAHXi9BlKCoKD-AO0uHOLW2NUtjM\"\r\n            }\r\n\r\n        })\r\n        const json = await respons.json();\r\n        setnote(json)\r\n    }\r\n\r\n\r\n    //Add Notes \r\n    const addNotes = async (title, description, tag) => {\r\n        // const respons = await fetch(\"http://localhost:5000/api/notes/addnotes\", {\r\n        //     method: \"POST\",\r\n        //     headers: {\r\n        //         \"Content-Type\": \"application/json\",\r\n        //         \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZhYTc2MjcyNTdiYzEzN2Y0YTRlNDVmIn0sImlhdCI6MTcyMjYwMzYyNH0.X9rBNIV6BmBtHSOPAHXi9BlKCoKD-AO0uHOLW2NUtjM\"\r\n        //     },\r\n        //     body:JSON.stringify({title , description , tag})\r\n        //     // body: {\r\n        //     //     \"title\": title,\r\n        //     //     \"description\": description,\r\n        //     //     \"tag\": tag\r\n        //     // }\r\n\r\n        // })\r\n        // const json = await respons.json();\r\n\r\n        const noteone = {\r\n            \"_id\": \"66add4f245145saa76caffbddf\",\r\n            \"user\": \"66aa7627257bc137f4a4e45f\",\r\n            \"title\": title,\r\n            \"description\": de,\r\n            \"tag\": \"Default\",\r\n            \"date\": \"2024-08-03T06:57:54.531Z\",\r\n            \"__v\": 0\r\n          }\r\n        setnote(notes.concat(noteone))\r\n    }\r\n\r\n    // Delete Notes\r\n    const deletenote = async (id) => {\r\n        const respons = await fetch(`http://localhost:5000/api/notes/notedelete/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZhYTc2MjcyNTdiYzEzN2Y0YTRlNDVmIn0sImlhdCI6MTcyMjYwMzYyNH0.X9rBNIV6BmBtHSOPAHXi9BlKCoKD-AO0uHOLW2NUtjM\"\r\n            }\r\n\r\n        })\r\n        const json = await respons.json();\r\n        // setnote(json)\r\n        const newnote = notes.filter((note)=>{return note._id !== id})\r\n        setnote(newnote)\r\n    }\r\n    return (\r\n        <noteContext.Provider value={{ notes, addNotes, deletenote, getallnotes }}>\r\n            {props.children}\r\n        </noteContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NoteState"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAErC;EACA,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,OAAO,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;MACzEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,YAAY,EAAE;MAClB;IAEJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMJ,OAAO,CAACI,IAAI,CAAC,CAAC;IACjCN,OAAO,CAACM,IAAI,CAAC;EACjB,CAAC;;EAGD;EACA,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,KAAK,EAAEC,WAAW,EAAEC,GAAG,KAAK;IAChD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA,MAAMC,OAAO,GAAG;MACZ,KAAK,EAAE,4BAA4B;MACnC,MAAM,EAAE,0BAA0B;MAClC,OAAO,EAAEH,KAAK;MACd,aAAa,EAAEI,EAAE;MACjB,KAAK,EAAE,SAAS;MAChB,MAAM,EAAE,0BAA0B;MAClC,KAAK,EAAE;IACT,CAAC;IACHZ,OAAO,CAACD,KAAK,CAACc,MAAM,CAACF,OAAO,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,MAAMG,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC7B,MAAMb,OAAO,GAAG,MAAMC,KAAK,CAAC,8CAA8CY,EAAE,EAAE,EAAE;MAC5EX,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAE;MAClB;IAEJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMJ,OAAO,CAACI,IAAI,CAAC,CAAC;IACjC;IACA,MAAMU,OAAO,GAAGjB,KAAK,CAACkB,MAAM,CAAEC,IAAI,IAAG;MAAC,OAAOA,IAAI,CAACC,GAAG,KAAKJ,EAAE;IAAA,CAAC,CAAC;IAC9Df,OAAO,CAACgB,OAAO,CAAC;EACpB,CAAC;EACD,oBACIrB,OAAA,CAACF,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAEtB,KAAK;MAAEQ,QAAQ;MAAEO,UAAU;MAAEb;IAAY,CAAE;IAAAqB,QAAA,EACrEzB,KAAK,CAACyB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAAA5B,EAAA,CAnEKF,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAqEf,eAAeA,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}