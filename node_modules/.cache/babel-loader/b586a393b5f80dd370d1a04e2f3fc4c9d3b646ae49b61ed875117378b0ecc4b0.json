{"ast":null,"code":"var _jsxFileName = \"E:\\\\jash\\\\ReactJSYT\\\\MiniProjects\\\\Mynotebook\\\\mynote\\\\src\\\\Constaxt\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport noteContext from './noteContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const noteInitsialized = [{\n    \"user\": \"66aa7627257bc137f4a4e45f\",\n    \"title\": \"Hi ...1\",\n    \"description\": \"Hello 1 \",\n    \"tag\": \"ABCD\",\n    \"_id\": \"66af6bb542a370109f2cc40b\",\n    \"date\": \"2024-08-04T11:53:25.531Z\",\n    \"__v\": 0\n  }, {\n    \"user\": \"66aa76272572bc137f4a4e45f\",\n    \"title\": \"Hi ...2\",\n    \"description\": \"Hello 2\",\n    \"tag\": \"ABCD\",\n    \"_id\": \"66af6bb542a370109f2cc40b\",\n    \"date\": \"2024-08-04T11:53:25.531Z\",\n    \"__v\": 0\n  }];\n  const [notes, setnotes] = useState(noteInitsialized);\n\n  //Add a new Note....\n  const addNotes = (title, description, tag) => {\n    //API Call\n\n    //This is Client side\n    const note = {\n      \"user\": \"66aa762725721bc137f4a4e45f\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"_id\": \"66af6bb542a370109f2cc40b\",\n      \"date\": \"2024-08-04T11:53:25.531Z\",\n      \"__v\": 0\n    };\n    setnotes(notes.concat(note));\n  };\n\n  //Delete a Note...\n  const deleteNote = id => {\n    //API Call\n\n    //This is Client side\n    const newNote = notes.filter(note => {\n      note._id !== id;\n    });\n    setnotes(newNote);\n  };\n\n  //Edit a Note...\n  const editNote = async (title, description, tag) => {\n    //API Call\n    const response = await fetch(`http://localhost:5000/api/notes/updatenote/`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZhYTc2MjcyNTdiYzEzN2Y0YTRlNDVmIn0sImlhdCI6MTcyMjQ0NzQ3NH0.uW3CuxfuuWg_E5y5lGAq1FTZHITe650JMyQrD0mk9rc\"\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    //This is Client side\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(noteContext.Provider, {\n    value: {\n      notes,\n      addNotes,\n      deleteNote,\n      editNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"j7GAkDtoFOouENhUIeBWnUY+ZfY=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","noteContext","jsxDEV","_jsxDEV","NoteState","props","_s","noteInitsialized","notes","setnotes","addNotes","title","description","tag","note","concat","deleteNote","id","newNote","filter","_id","editNote","response","fetch","method","headers","body","JSON","stringify","json","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/jash/ReactJSYT/MiniProjects/Mynotebook/mynote/src/Constaxt/notes/NoteState.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport noteContext from './noteContext'\r\n\r\nconst NoteState = (props) => {\r\n   const noteInitsialized = [\r\n    {\r\n        \"user\": \"66aa7627257bc137f4a4e45f\",\r\n        \"title\": \"Hi ...1\",\r\n        \"description\": \"Hello 1 \",\r\n        \"tag\": \"ABCD\",\r\n        \"_id\": \"66af6bb542a370109f2cc40b\",\r\n        \"date\": \"2024-08-04T11:53:25.531Z\",\r\n        \"__v\": 0\r\n      },\r\n      {\r\n        \"user\": \"66aa76272572bc137f4a4e45f\",\r\n        \"title\": \"Hi ...2\",\r\n        \"description\": \"Hello 2\",\r\n        \"tag\": \"ABCD\",\r\n        \"_id\": \"66af6bb542a370109f2cc40b\",\r\n        \"date\": \"2024-08-04T11:53:25.531Z\",\r\n        \"__v\": 0\r\n      }\r\n   ]\r\n   const [notes, setnotes] = useState(noteInitsialized)\r\n\r\n   //Add a new Note....\r\n   const addNotes = (title , description , tag)=>{\r\n    //API Call\r\n    \r\n    //This is Client side\r\n      const note = {\r\n        \"user\": \"66aa762725721bc137f4a4e45f\",\r\n        \"title\": title,\r\n        \"description\": description,\r\n        \"tag\": tag,\r\n        \"_id\": \"66af6bb542a370109f2cc40b\",\r\n        \"date\": \"2024-08-04T11:53:25.531Z\",\r\n        \"__v\": 0\r\n      }\r\n      setnotes(notes.concat(note))\r\n   }\r\n\r\n   //Delete a Note...\r\n   const deleteNote = (id)=>{\r\n    //API Call\r\n    \r\n    //This is Client side\r\n    const newNote = notes.filter((note)=>{note._id !== id}) \r\n    setnotes(newNote)\r\n   }\r\n\r\n   //Edit a Note...\r\n   const editNote = async(title , description , tag)=>{\r\n    //API Call\r\n    const response = await fetch(`http://localhost:5000/api/notes/updatenote/`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"auth-token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjZhYTc2MjcyNTdiYzEzN2Y0YTRlNDVmIn0sImlhdCI6MTcyMjQ0NzQ3NH0.uW3CuxfuuWg_E5y5lGAq1FTZHITe650JMyQrD0mk9rc\",\r\n      },\r\n      body: JSON.stringify({title , description , tag}),\r\n    });\r\n    const json = await response.json()\r\n    //This is Client side\r\n    for(let index = 0 ; index<notes.length ; index++){\r\n      const element = notes[index]\r\n      if(element._id === id){\r\n        element.title = title;\r\n        element.description = description;\r\n        element.tag = tag;\r\n      }\r\n    }\r\n   }\r\n    return (\r\n        <noteContext.Provider value={{ notes , addNotes , deleteNote , editNote}}>\r\n            {props.children}\r\n        </noteContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NoteState"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAMC,gBAAgB,GAAG,CACxB;IACI,MAAM,EAAE,0BAA0B;IAClC,OAAO,EAAE,SAAS;IAClB,aAAa,EAAE,UAAU;IACzB,KAAK,EAAE,MAAM;IACb,KAAK,EAAE,0BAA0B;IACjC,MAAM,EAAE,0BAA0B;IAClC,KAAK,EAAE;EACT,CAAC,EACD;IACE,MAAM,EAAE,2BAA2B;IACnC,OAAO,EAAE,SAAS;IAClB,aAAa,EAAE,SAAS;IACxB,KAAK,EAAE,MAAM;IACb,KAAK,EAAE,0BAA0B;IACjC,MAAM,EAAE,0BAA0B;IAClC,KAAK,EAAE;EACT,CAAC,CACH;EACD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACO,gBAAgB,CAAC;;EAEpD;EACA,MAAMG,QAAQ,GAAGA,CAACC,KAAK,EAAGC,WAAW,EAAGC,GAAG,KAAG;IAC7C;;IAEA;IACE,MAAMC,IAAI,GAAG;MACX,MAAM,EAAE,4BAA4B;MACpC,OAAO,EAAEH,KAAK;MACd,aAAa,EAAEC,WAAW;MAC1B,KAAK,EAAEC,GAAG;MACV,KAAK,EAAE,0BAA0B;MACjC,MAAM,EAAE,0BAA0B;MAClC,KAAK,EAAE;IACT,CAAC;IACDJ,QAAQ,CAACD,KAAK,CAACO,MAAM,CAACD,IAAI,CAAC,CAAC;EAC/B,CAAC;;EAED;EACA,MAAME,UAAU,GAAIC,EAAE,IAAG;IACxB;;IAEA;IACA,MAAMC,OAAO,GAAGV,KAAK,CAACW,MAAM,CAAEL,IAAI,IAAG;MAACA,IAAI,CAACM,GAAG,KAAKH,EAAE;IAAA,CAAC,CAAC;IACvDR,QAAQ,CAACS,OAAO,CAAC;EAClB,CAAC;;EAED;EACA,MAAMG,QAAQ,GAAG,MAAAA,CAAMV,KAAK,EAAGC,WAAW,EAAGC,GAAG,KAAG;IAClD;IACA,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,6CAA6C,EAAE;MAC1EC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAC;MACf,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACjB,KAAK;QAAGC,WAAW;QAAGC;MAAG,CAAC;IAClD,CAAC,CAAC;IACF,MAAMgB,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC;IACA,KAAI,IAAIC,KAAK,GAAG,CAAC,EAAGA,KAAK,GAACtB,KAAK,CAACuB,MAAM,EAAGD,KAAK,EAAE,EAAC;MAC/C,MAAME,OAAO,GAAGxB,KAAK,CAACsB,KAAK,CAAC;MAC5B,IAAGE,OAAO,CAACZ,GAAG,KAAKH,EAAE,EAAC;QACpBe,OAAO,CAACrB,KAAK,GAAGA,KAAK;QACrBqB,OAAO,CAACpB,WAAW,GAAGA,WAAW;QACjCoB,OAAO,CAACnB,GAAG,GAAGA,GAAG;MACnB;IACF;EACD,CAAC;EACA,oBACIV,OAAA,CAACF,WAAW,CAACgC,QAAQ;IAACC,KAAK,EAAE;MAAE1B,KAAK;MAAGE,QAAQ;MAAGM,UAAU;MAAGK;IAAQ,CAAE;IAAAc,QAAA,EACpE9B,KAAK,CAAC8B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAAAjC,EAAA,CA5EKF,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AA8Ef,eAAeA,SAAS;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}