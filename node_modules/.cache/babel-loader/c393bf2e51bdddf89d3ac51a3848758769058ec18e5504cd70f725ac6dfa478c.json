{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const {\n    showalert\n  } = props;\n  const [credentials, setcredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  let Navigate = useNavigate();\n  const handlelogin = async e => {\n    e.preventDefault();\n    const response = await fetch(`http://localhost:5000/api/author/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: credentials.email,\n        password: credentials.password\n      })\n    });\n    const json = await response.json();\n    if (json.success) {\n      localStorage.setItem(\"token\", json.token);\n      showalert(\"Login SuccessFully Compeleted\", \"success\");\n      Navigate('/');\n    } else {\n      setcredentials({\n        email: \"\",\n        password: \"\"\n      });\n      showalert(\"Plz try to login with correct credentails\", \"danger\");\n    }\n  };\n  const onnChange = e => {\n    setcredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Login, \"eLuF7yUlIiTcYjaJWHvMgOpnF3w=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","Fragment","_Fragment","jsxDEV","_jsxDEV","Login","props","_s","showalert","credentials","setcredentials","email","password","Navigate","handlelogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","json","success","localStorage","setItem","token","onnChange","target","name","value","_c","$RefreshReg$"],"sources":["E:/jash/ReactJSYT/MiniProjects/Mynotebook/mynote/src/Componants/Login.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nconst Login = (props) => {\r\n    const { showalert } = props\r\n    const [credentials, setcredentials] = useState({ email: \"\", password: \"\" })\r\n    let Navigate = useNavigate()\r\n    const handlelogin = async (e) => {\r\n        e.preventDefault()\r\n        const response = await fetch(`http://localhost:5000/api/author/login`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({ email: credentials.email, password: credentials.password }),\r\n        });\r\n        const json = await response.json()\r\n        if (json.success) {\r\n            localStorage.setItem(\"token\", json.token)\r\n            showalert(\"Login SuccessFully Compeleted\", \"success\")\r\n            Navigate('/')\r\n        } else {\r\n            setcredentials({ email: \"\", password: \"\" })\r\n            showalert(\"Plz try to login with correct credentails\", \"danger\")\r\n        }\r\n    }\r\n    const onnChange = (e) => {\r\n        setcredentials({ ...credentials, [e.target.name]: e.target.value })\r\n    }\r\n    return (\r\n        <>\r\n            {/* <form className='my-3' onSubmit={handlelogin}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" name=\"email\" value={credentials.email} onChange={onnChange} />\r\n                </div>\r\n                <div className=\"form-group my-2\">\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" name=\"password\" value={credentials.password} onChange={onnChange} />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                <hr />\r\n                <Link class=\"btn btn-outline-info\" to=\"/signup\" role=\"button\">I don't Have an Account , Create Account</Link>\r\n            </form> */}\r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAU,CAAC,GAAGF,KAAK;EAC3B,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC3E,IAAIC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC5B,MAAMc,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEZ,KAAK,EAAEF,WAAW,CAACE,KAAK;QAAEC,QAAQ,EAAEH,WAAW,CAACG;MAAS,CAAC;IACrF,CAAC,CAAC;IACF,MAAMY,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAClC,IAAIA,IAAI,CAACC,OAAO,EAAE;MACdC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,KAAK,CAAC;MACzCpB,SAAS,CAAC,+BAA+B,EAAE,SAAS,CAAC;MACrDK,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,MAAM;MACHH,cAAc,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC,CAAC;MAC3CJ,SAAS,CAAC,2CAA2C,EAAE,QAAQ,CAAC;IACpE;EACJ,CAAC;EACD,MAAMqB,SAAS,GAAId,CAAC,IAAK;IACrBL,cAAc,CAAC;MAAE,GAAGD,WAAW;MAAE,CAACM,CAAC,CAACe,MAAM,CAACC,IAAI,GAAGhB,CAAC,CAACe,MAAM,CAACE;IAAM,CAAC,CAAC;EACvE,CAAC;EACD,oBACI5B,OAAA,CAAAF,SAAA,mBAgBE,CAAC;AAEX,CAAC;AAAAK,EAAA,CA7CKF,KAAK;EAAA,QAGQL,WAAW;AAAA;AAAAiC,EAAA,GAHxB5B,KAAK;AA+CX,eAAeA,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}